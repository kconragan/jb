angular.module("app",["ui.router","angular-carousel","templatescache","ngTextTruncate","projects"]).run(function(){FastClick.attach(document.body)}),angular.module("projects",[]),angular.module("app").config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/projects"),t.state("projectList",{url:"/projects",controller:"ProjectsCtrl",templateUrl:"projects/projects.html"}).state("projectDetail",{url:"/projects/:id",controller:"ProjectCtrl",templateUrl:"projects/project.html"})}]),angular.module("app").controller("ProjectsCtrl",["$scope","$http","$filter","dataService",function(t,e,r,o){o.getAlbums().then(function(e){t.projects=e,t.predicate="-modified"})}]).controller("ProjectCtrl",["$scope","$stateParams","dataService",function(t,e,r){console.log(e.id),r.getAlbumPhotos(e.id).then(function(e){t.currentArtwork=6,t.title=e.title,t.description=e.description,t.masthead=e.masthead,t.photos=e.photos}),t.updateLightbox=function(e){t.currentArtwork=e}}]),angular.module("app").directive("lightboxTrigger",["$timeout",function(t){"use strict";return{link:function(e,r,o){r.bind("click",function(){e.$apply(function(){e.currentArtwork=o.currentIndex,$(".lightbox").removeClass("is-hidden")}),t(function(){},200)})}}}]).directive("closeLightbox",[function(){"use strict";return{link:function(t,e){e.bind("click",function(){$(".lightbox").addClass("is-hidden"),t.$apply(function(){t.updateLightbox(0)})})}}}]).directive("ripple",[function(){"use strict";return{link:function(t,e){e.bind("click",function(t){console.log("trigger ripple");var e=$("<div/>"),r=$(this).offset(),o=t.pageX-r.left,i=t.pageY-r.top;e.addClass("ripple-effect");var n=$(".ripple-effect");n.css("height",$(this).height()),n.css("width",$(this).height()),e.css({top:i-n.height()/2,left:o-n.width()/2,background:$(this).data("ripple-color")}).appendTo($(this)),window.setTimeout(function(){e.remove()},2e3)})}}}]);var GOOGLEID="112223276805962705555";angular.module("projects",[]).factory("dataService",["$http","$q",function(t,e){var r="https://picasaweb.google.com/data/feed/api/user/"+GOOGLEID+"/?alt=json";return{getAlbums:function(){var o=e.defer(),i=[];return t.get(r).success(function(e){var r=e.feed.entry;_.sortBy(r,function(t){var e=new Date(t.updated.$t);return console.log(e.getTime()),e.getTime()}).reverse(),_.each(r,function(e){var r={};r.id=e.gphoto$id.$t,r.title=e.title.$t,r.modified=e.updated.$t,r.thumbUrl=e.link[0].href,"Profile Photos"!==r.title&&t.get(r.thumbUrl).success(function(t){r.thumb=t.feed.entry[0].content.src,i.push(r)}).error(function(t){console.log(t)})}),o.resolve(i)}).error(function(){o.reject}),o.promise},getAlbumThumb:function(){},getAlbumPhotos:function(r){var o={},i="https://picasaweb.google.com/data/feed/api/user/"+GOOGLEID+"/albumid/"+r+"?alt=json&?imgmax=912",n=e.defer();return t.get(i).success(function(t){console.log(t),o.title=t.feed.title.$t,o.masthead=t.feed.entry[0].content.src;for(var e=[],r=0;r<t.feed.entry.length;r++){var i=t.feed.entry[r];""!==i.summary.$t&&""!==o.description&&(o.description=i.summary.$t);var c=i.content.src.split("/"),s=c[0]+"//"+c[2]+"/"+c[3]+"/"+c[4]+"/"+c[5]+"/"+c[6]+"/w400-h400-c/"+c[7],l=c[0]+"//"+c[2]+"/"+c[3]+"/"+c[4]+"/"+c[5]+"/"+c[6]+"/s1280/"+c[7];i.url=s,i.bigUrl=l,e.push(i)}o.photos=e,n.resolve(o)}).error(function(){n.reject}),n.promise}}}]);
//# sourceMappingURL=data:application/json;base64,