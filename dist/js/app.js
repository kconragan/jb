angular.module("app",["ui.router","ngAnimate","angular-carousel","templatescache","ngTextTruncate","projects"]).run(function(){FastClick.attach(document.body)}),angular.module("projects",[]),angular.module("app").config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/projects"),t.state("projectList",{url:"/projects",controller:"ProjectsCtrl",templateUrl:"projects/projects.html"}).state("projectDetail",{url:"/projects/:id",controller:"ProjectCtrl",templateUrl:"projects/project.html"})}]),angular.module("app").controller("ViewController",["$scope",function(t){t.layoutConfig={fullBleed:"fullbleed"}}]).controller("ProjectsCtrl",["$scope","$http","$filter","dataService",function(t,e,o,r){t.layoutConfig.fullbleed="fullbleed",r.getAlbums().then(function(e){t.projects=e,t.predicate="-modified"})}]).controller("ProjectCtrl",["$scope","$stateParams","dataService",function(t,e,o){t.layoutConfig.fullbleed="",t.$on("$stateChangeSuccess",function(){}),o.getAlbumPhotos(e.id).then(function(e){t.currentArtwork=6,t.title=e.title,t.description=e.description,t.masthead=e.masthead,t.photos=e.photos}),t.updateLightbox=function(e){t.currentArtwork=e}}]),angular.module("app").directive("lightboxTrigger",["$timeout",function(t){"use strict";return{link:function(e,o,r){o.bind("click",function(){e.$apply(function(){e.currentArtwork=r.currentIndex,$(".lightbox").removeClass("is-hidden")}),t(function(){},200)})}}}]).directive("contactToggle",function(){"use strict";return{link:function(t,e){e.bind("click",function(){$("#app").addClass("is-hidden"),$("#contact").addClass("is-visible")})}}}).directive("closeAbout",function(){"use strict";return{link:function(t,e){e.bind("click",function(){$("#app").removeClass("is-hidden"),$("#contact").removeClass("is-visible")})}}}).directive("masthead",["$timeout",function(t){"use strict";return{scope:{bar:"=url"},link:function(e,o){$(window).height()+"px";e.$watch("bar",function(e){void 0!==e&&$("<img/>").attr("src",e).load(function(){$(this).remove(),o.addClass("is-loaded"),$(".project-abstract").addClass("is-loaded"),t(function(){$(".masthead .more").addClass("bounce-slowly")},3500)})})}}}]).directive("closeLightbox",[function(){"use strict";return{link:function(t,e){e.bind("click",function(){$(".lightbox").addClass("is-hidden"),t.$apply(function(){t.updateLightbox(0)})})}}}]).directive("ripple",[function(){"use strict";return{link:function(t,e){e.bind("click",function(t){console.log("trigger ripple");var e=$("<div/>"),o=$(this).offset(),r=t.pageX-o.left,i=t.pageY-o.top;e.addClass("ripple-effect");var n=$(".ripple-effect");n.css("height",$(this).height()),n.css("width",$(this).height()),e.css({top:i-n.height()/2,left:r-n.width()/2,background:$(this).data("ripple-color")}).appendTo($(this)),window.setTimeout(function(){e.remove()},2e3)})}}}]).directive("scroll",["$window",function(t){function e(){return window.pageYOffset||document.documentElement.scrollTop}return function(){var o=0,r=0,i=$("header.header");angular.element(t).bind("scroll",function(){var t=$(this).scrollTop();t>o?t>0&&(i.hasClass("is-hidden")||r>0&&(i.addClass("is-hidden"),i.removeClass("is-filled"),r=0)):(console.log("scrolling up"),r++,r>2&&(i.removeClass("is-hidden"),i.hasClass("transparent")&&(t>$(window).height()?i.addClass("is-filled"):i.removeClass("is-filled")))),o=e()})}}]);var GOOGLEID="112223276805962705555";angular.module("projects",[]).factory("dataService",["$http","$q",function(t,e){var o="https://picasaweb.google.com/data/feed/api/user/"+GOOGLEID+"/?alt=json";return _createPiasaPhotoUrl=function(t,e){var o=t.split("/"),r=o[0]+"//"+o[2]+"/"+o[3]+"/"+o[4]+"/"+o[5]+"/"+o[6]+"/s1280/"+o[7];return r},{getAlbums:function(){var r=e.defer(),i=[];return t.get(o).success(function(e){var o=e.feed.entry;_.sortBy(o,function(t){var e=new Date(t.updated.$t);return e.getTime()}).reverse(),_.each(o,function(e){var o={};o.id=e.gphoto$id.$t,o.title=e.title.$t,o.modified=e.updated.$t,o.thumbUrl=e.link[0].href,"Profile Photos"!==o.title&&t.get(o.thumbUrl).success(function(t){o.thumb=_createPiasaPhotoUrl(t.feed.entry[0].content.src),i.push(o)}).error(function(t){console.log(t)})}),r.resolve(i)}).error(function(){r.reject}),r.promise},getAlbumThumb:function(){},getAlbumPhotos:function(o){var r={},i="https://picasaweb.google.com/data/feed/api/user/"+GOOGLEID+"/albumid/"+o+"?alt=json&?imgmax=912",n=e.defer();return t.get(i).success(function(t){r.title=t.feed.title.$t,r.masthead=_createPiasaPhotoUrl(t.feed.entry[0].content.src);for(var e=[],o=0;o<t.feed.entry.length;o++){var i=t.feed.entry[o];""!==i.summary.$t&&""!==r.description&&(r.description=i.summary.$t);var s=i.content.src.split("/"),c=s[0]+"//"+s[2]+"/"+s[3]+"/"+s[4]+"/"+s[5]+"/"+s[6]+"/w1200-h1200-c/"+s[7],l=s[0]+"//"+s[2]+"/"+s[3]+"/"+s[4]+"/"+s[5]+"/"+s[6]+"/s1640/"+s[7];i.url=c,i.bigUrl=l,e.push(i)}r.photos=e,n.resolve(r)}).error(function(){n.reject}),n.promise}}}]);
//# sourceMappingURL=data:application/json;base64,